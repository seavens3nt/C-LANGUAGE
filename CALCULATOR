#include <stdio.h>
#include <math.h>


float add(float a, float b);
float subtract(float a, float b);
float multiply(float a, float b);
float divide(float a, float b);
float power(float base, float exp);
float square_root(float a);
void increment(float *a);
void decrement(float *a);


int main() {
    float num1, num2, result;
    char op;


    printf("Enter two numbers (up to two digits): \n");
    printf("\nEnter first numbers: ");
    scanf(" %f", &num1);
    printf("\nEnter second numbers: ");
    scanf(" %f", &num2);


    printf("\nChoose an operation (+, -, *, /, ^ for power, s for square root, i for increment, d for decrement): ");
    scanf(" %c", &op);


    switch (op) {
        case '+':
            result = add(num1, num2);
            printf("Result: %.2f\n", result);
            break;
        case '-':
            result = subtract(num1, num2);
            printf("Result: %.2f\n", result);
            break;
        case '*':
            result = multiply(num1, num2);
            printf("Result: %.2f\n", result);
            break;
        case '/':
            if (num2 != 0) {
                result = divide(num1, num2);
                printf("Result: %.2f\n", result);
            } else {
                printf("Error: Division by zero!\n");
            }
            break;
        case '^':
            result = power(num1, num2);
            printf("Result: %.2f\n", result);
            break;
        case 's':
            printf("Square root of first number: %.2f\n", square_root(num1));
            break;
        case 'i':
            increment(&num1);
            printf("Incremented first number: %.2f\n", num1);
            break;
        case 'd':
            decrement(&num1);
            printf("Decremented first number: %.2f\n", num1);
            break;
        default:
            printf("Invalid operator!\n");
    }


    return 0;
}


float add(float a, float b) {
    return a + b;
}


float subtract(float a, float b) {
    return a - b;
}


float multiply(float a, float b) {
    return a * b;
}


float divide(float a, float b) {
    return a / b;
}


float power(float base, float exp) {
    return pow(base, exp);
}


float square_root(float a) {
    return sqrt(a);
}


void increment(float *a) {
    (*a)++;
}


void decrement(float *a) {
    (*a)--;
}
